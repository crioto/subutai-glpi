---

- hosts: glpi
  remote_user: root
  tasks:
    - name: Upgrade OS
      apt:
        update_cache: true
        upgrade: true
    - name: Install dependencies
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - ca-certificates
        - python-mysqldb
        - nginx
        - mariadb-server
        - php-fpm
        - php-curl
        - php-gd
        - php-json
        - php-mbstring
        - php-mysqli
        - php-simplexml
        - php-xml
        - php-cli
        - php-imap
        - php-ldap
        - php-xmlrpc
        - php-mysql
    - name: Download GLPI package
      get_url:
        url: https://github.com/glpi-project/glpi/releases/download/9.3.3/glpi-9.3.3.tgz
        dest: /tmp/glpi.tgz
        mode: 0755
    - name: Creates website directory
      file:
        path: /var/www/{{ domainName }}
        state: directory
    - name: Extract files
      unarchive:
        src: /tmp/glpi.tgz
        dest: /var/www/{{ domainName }}
        remote_src: yes
    - name: Set permission to files directory
      file:
        path: /var/www/{{ domainName }}/glpi/files
        owner: www-data
        group: www-data
        mode: 0777
    - name: Set permission to config directory
      file:
        path: /var/www/{{ domainName }}/glpi/config
        owner: www-data
        group: www-data
        mode: 0777
    - name: Create a new database
      mysql_db:
        name: "{{ dbName }}"
        state: present
    - name: Create new database user
      mysql_user:
        name: "{{ dbUser }}"
        password: "{{ dbPassword }}"
        priv: '*.*:ALL'
        state: present
    - name: Run installation script
      shell: /usr/bin/php /var/www/{{ domainName }}/glpi/scripts/cliinstall.php --db {{ dbName }} --user {{ dbUser }} --pass {{ dbPass }}
    - name: Destroy installation directory
      file:
        state: absent
        path: "/var/www/{{ domainName }}/glpi/install/"
    - name: Copy configuration
      template:
        src: files/glpi-nginx.conf
        dest: /etc/nginx/sites-enabled
    - name: Restart nginx
      systemd:
        name: nginx
        state: restarted
        daemon_reload: yes